{"version":3,"sources":["photos/logo.jpg","photos sync /^/.//.*/.jpg$","photos/baseball.jpg","photos/basketball.jpg","photos/icehockey.jpg","photos/soccer.jpg","pages/HomePage.js","pages/club-info.js","components/club/ClubsListOther.js","pages/NotFoundPage.js","components/club/VotesSection.js","components/club/ReviewsList.js","components/club/AddReviewForm.js","pages/ClubPage.js","components/club/ClubsList.js","pages/ClubsListPage.js","components/member/Registration.js","components/member/MemberList.js","components/member/SearchMember.js","pages/MembersPage.js","components/ResetDB.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","HomePage","Card","Img","variant","src","require","Body","Title","bg","Alert","clubs","initials","name","location","hours","coach","email","about","fee","ClubsListOther","Row","club","key","Col","xs","lg","to","ImgOverlay","NotFoundPage","VotesSection","clubInitials","upvotes","setClubFeedback","upvoteClub","a","fetch","method","result","json","body","downvoteClub","Button","onClick","className","ReviewsList","reviews","review","sm","md","Toast","Header","closeButton","username","date","registerDate","format","text","AddReviewForm","useState","setUsername","reviewText","setReviewText","valid","setValid","addReview","window","alert","JSON","stringify","moment","headers","preventDefault","Form","Label","Group","Control","type","placeholder","onChange","event","target","value","as","rows","ClubPage","match","params","clubInfo","find","clubFeedback","useEffect","scrollTo","fetchData","otherClubs","filter","Table","striped","hover","ClubsList","Text","substring","ClubsListPage","show","setShow","handleClose","align","Modal","onHide","Footer","Registration","members","setMembers","lastIndex","setLastIndex","initialInfo","registerClub","DOB","city","prov","phone","tempMember","setTempMember","registerMember","member","tempMembers","membersId","unshift","handleAdd","handleChange","prevState","backdrop","keyboard","MemberList","order","orderBy","setOrderBy","orderDir","setOrderDir","queryText","filteredMembers","sort","b","toLowerCase","eachItem","includes","updateInfo","memberIndex","findIndex","deleteMember","without","changeOrder","dir","style","overflow","whiteSpace","scope","_","contentEditable","suppressContentEditableWarning","onBlur","innerText","SearchMember","setQueryText","searchMember","MembersPage","index","then","response","ResetDB","ListGroup","Item","reload","NavBar","Navbar","fixed","Brand","href","Toggle","aria-controls","Nav","Link","App","Container","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f2b215e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.07e4c301.jpg\";","var map = {\n\t\"./baseball.jpg\": 89,\n\t\"./basketball.jpg\": 90,\n\t\"./icehockey.jpg\": 91,\n\t\"./logo.jpg\": 61,\n\t\"./soccer.jpg\": 92\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 63;","module.exports = __webpack_public_path__ + \"static/media/baseball.54fc4e65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/basketball.cdf147d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/icehockey.33a1ecef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/soccer.3d55ad4e.jpg\";","import React from 'react';\nimport { Card, Alert } from 'react-bootstrap';\n\nconst HomePage = () => (\n  <>\n    <Card>\n      <Card.Img variant='top' src={require(`../photos/logo.jpg`)} />\n      <Card.Body>\n        <Card.Title bg='black'>\n          <h1>Welcome to JK Sports Club!</h1>\n        </Card.Title>\n      </Card.Body>\n    </Card>\n    <Alert variant='success'>\n      This is a web application that provides information about sports clubs,\n      manages reviews, and adds, modifies and deletes membership information.\n    </Alert>\n  </>\n);\nexport default HomePage;\n\n//logo.jpg from https://pixabay.com/photos/sports-sport-baseball-basketball-5324462/\n","const clubs = [\n    {\n        initials: 'baseball',\n        name: 'BASEBALL',\n        location: 'Calgary, AB',\n        hours: 'Monday 4PM-6PM',\n        coach: 'Barry Bond',\n        email: 'barry.bond@email.com',\n        about: 'JK Baseball Club provides people with the opportunity of engaging in activities of physical fitness and health through the playing of baseball in Calgary and teaches youth to be respectful towards each other.\\n' +\n            'We also provide people with an equal opportunity to participate in the activities of the league regardless of ability and offer specialized programs of teaching baseball, umpiring, and coaching clinics to active members.',\n        fee: '$49.99 (monthly fee)'\n    },\n    {\n        initials: 'soccer',\n        name: 'SOCCER',\n        location: 'Vancouver, BC',\n        hours: 'Tuesday 5PM-7PM',\n        coach: 'Pellé',\n        email: 'pelle@email.com',\n        about: 'Known as the number one soccer club in British Colombia, JK Soccer Club programs follow the European model of techinical delivery.\\n' +\n            'Offering grassroots, recreational and competitive programs both indoor and outdoor(depending on the season)\\n' +\n            'Grassroots programs run weekly, are mixed teams, and a reat way to see if you are ready to kick it up a notch and try out for the competitive the next level academy\\n' +\n            'Tryouts are held in smaller groups, so the coaches can personally assess the skills of each of the athletes in order to accurately place them.\\n' +\n            'It\\'s also the only program with an indoor field.' +\n            'So if you are footloose and fancy free, note that registration and descriptions for the fall indoor programs opens on September 10',\n        fee: '$59.99 (monthly fee)'\n    },\n    {\n        initials: 'basketball',\n        name: 'BASKETBALL',\n        location: 'Toronto, ON',\n        hours: 'Wednesday 4PM-6PM',\n        coach: 'Mike Jordan',\n        email: 'mike.jordan@email.com',\n        about: 'With a focus on training people who does not have basketball experience to develop strong fundamental skills in basketball, \\n' +\n            'the SKY and MOON programs include basic and advanced levels.\\n' +\n            'Camps and classes are available all across the city.\\n',\n        fee: '$39.99 (monthly fee)'\n    },\n    {\n        initials: 'icehockey',\n        name: 'ICE HOCKEY',\n        location: 'Montreal, QC',\n        hours: 'Thursday 6AM-8M',\n        coach: 'Wayne Gretzcy',\n        email: 'wayne.gretzcy@email.com',\n        about: 'Nothing screams \\'Canada\\' like hockey, and there are plenty of options for you.\\n' +\n            'JK Hockey Club provides an equal opportunity to play hockey in a fun and safe learning environment.\\n' +\n            'Through the fair play initiative and team participation, the association strives to teach valuable life skills.',\n        fee: '$69.99 (monthly fee)'\n    }\n];\n\nexport default clubs;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Card, Col, Row} from 'react-bootstrap';\n\nconst ClubsListOther = ({clubs}) => (\n    <Row>\n        {clubs.map((club, key) => (\n            <Col xs=\"6\" lg=\"4\" key={key}>\n                <Card>\n                    <Link to={`/clubs/${club.initials}`}>\n                        <Card.Img variant=\"top\" src={require(`../../photos/${club.initials}.jpg`)}/>\n                        <Card.ImgOverlay>\n                            <Card.Body>\n                                <h6>{club.name}</h6>\n                            </Card.Body>\n                        </Card.ImgOverlay>\n                    </Link>\n                </Card>\n            </Col>\n        ))}\n    </Row>\n)\nexport default ClubsListOther;\n\n/*\nclubs.map((club, key) => (\n    <Col xs=\"12\" lg=\"6\" key={key}>\n        <Card>\n            <Link to={`/clubs/${club.initials}`}>\n                <Card.Img variant=\"top\" src={require(`../photos/${club.initials}.jpg`)}/>\n                <Card.Body>\n                    <Card.Title bg=\"black\"><h2>{club.name}</h2></Card.Title>\n                    <Card.Text>\n                        {club.about.substring(0, 100)}...\n                    </Card.Text>\n                </Card.Body>\n            </Link>\n        </Card>\n    </Col>\n))*/\n","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;\n\n","import React from 'react';\nimport {\n    FiThumbsUp,\n    FiThumbsDown\n} from 'react-icons/fi';\nimport {\n    Container,\n    Button,\n} from 'react-bootstrap';\n\nconst VotesSection = ({clubInitials, upvotes, setClubFeedback}) => {\n    const upvoteClub = async () => {\n        const result = await fetch(`/api/clubs/${clubInitials}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setClubFeedback(body);\n    }\n\n    const downvoteClub = async () => {\n        const result = await fetch(`/api/clubs/${clubInitials}/downvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setClubFeedback(body);\n    }\n    return (\n        <>\n            <Button variant=\"success m-1\" onClick={() => upvoteClub()}><FiThumbsUp/></Button>\n            <Button variant=\"danger m-1\" onClick={() => downvoteClub()}><FiThumbsDown/></Button>\n            <p className=\"d-inline-block p-2\">This club has been upvoted <span className=\"font-weight-bold\">{upvotes}</span> times.</p>\n        </>\n    );\n}\n\nexport default VotesSection;","import React from 'react';\nimport {Col, Row, Toast} from 'react-bootstrap';\nimport Moment from \"react-moment\";\n\nconst ReviewsList = ({reviews}) => (\n    <>\n        <h4>Reviews</h4>\n        <Row>\n            {reviews.map((review, key) => (\n                <Col xs={12} sm={6} md={4} className=\"justify-content-center\" key={key}>\n                    <Toast className=\"p-2 m-2\">\n                        <Toast.Header closeButton={false}>\n                            <strong className=\"mr-auto\">{review.username}</strong>\n                            <small>\n                                <Moment date={review.registerDate}\n                                        format=\"YYYY-MM-DD\"/>\n                            </small>\n                        </Toast.Header>\n                        <Toast.Body>{review.text}</Toast.Body>\n                    </Toast>\n                </Col>\n            ))}\n        </Row>\n    </>\n)\n\nexport default ReviewsList;","import React, {useState} from 'react';\nimport {\n    Form,\n    Button\n} from 'react-bootstrap';\nimport moment from \"moment\";\n\nconst AddReviewForm = ({clubInitials: clubInitials, setClubFeedback: setClubFeedback}) => {\n    const [username, setUsername] = useState('');\n    const [registerDate, setRegisterDate] = useState('');\n    const [reviewText, setReviewText] = useState('');\n    const [valid, setValid] = useState(true);\n\n    const addReview = async (e) => {\n        if (username === '') {\n            window.alert('Your name Required.');\n            setValid(false);\n        } else if (reviewText === '') {\n            window.alert('Review Required.');\n            setValid(false);\n        } else {\n            setValid(true);\n        }\n\n        if (valid) {\n            const result = await fetch(`/api/clubs/${clubInitials}/add-review`, {\n                method: 'post',\n                body: JSON.stringify({username: username, registerDate: moment(), text: reviewText}),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const body = await result.json();\n            setClubFeedback(body);\n            setUsername('');\n            setReviewText('');\n            e.preventDefault();\n        }\n    }\n\n    return (\n        /*<div className=\"container jumbotron\">\n            <h3>Add a Review</h3>\n            <label>\n                <input type=\"text\" value={username} className=\"form-control\" placeholder=\"Name\"\n                       onChange={(event) => setUsername(event.target.value)}/>\n            </label>\n            <br/>\n            <label>\n                <textarea rows=\"4\" cols=\"50\" value={reviewText} className=\"form-control\" placeholder=\"Review\"\n                          onChange={(event) => setReviewText(event.target.value)}/>\n            </label>\n            <br/>\n            <button className=\"btn btn-success\" onClick={() => addReview()}>Add Comment</button>\n        </div>*/\n\n        <Form>\n            <Form.Label>Add Your Review Here</Form.Label>\n            <Form.Group>\n                <Form.Control\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Your name\"\n                    onChange={(event) => setUsername(event.target.value)}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    id=\"review\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                    placeholder=\"What do you think about this club?\"\n                    onChange={(event) => setReviewText(event.target.value)}\n                />\n            </Form.Group>\n            <Button\n                type=\"submit\"\n                className=\"mb-2\"\n                onClick={e =>addReview(e)}\n            >\n                Add Review\n            </Button>\n        </Form>\n    );\n}\n\nexport default AddReviewForm;","import React, {useEffect, useState} from 'react';\nimport {Table} from 'react-bootstrap';\nimport clubInfo from './club-info';\nimport ClubsListOther from '../components/club/ClubsListOther';\nimport NotFoundPage from './NotFoundPage';\nimport VotesSection from '../components/club/VotesSection';\nimport ReviewsList from '../components/club/ReviewsList';\nimport AddReviewForm from '../components/club/AddReviewForm'\n\nconst ClubPage = ({match}) => {\n\n    const initials = match.params.initials; // from url\n    const club = clubInfo.find(club => club.initials === initials); // from clubInfo\n\n    const [clubFeedback, setClubFeedback] = useState({upvotes: 0, reviews: []});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            window.scrollTo(0, 0);  // scroll to top\n            const result = await fetch(`/api/clubs/${initials}`);\n            const body = await result.json();\n            setClubFeedback(body);\n        }\n        fetchData(); //Cannot use async on useEffect, so made the fetchData and run it later.\n    }, [initials]);\n\n    if (!club) return <NotFoundPage/>\n\n    const otherClubs = clubInfo.filter(club => club.initials !== initials);\n    /*const clubPhoto = require(\"../photos/\" + initials + \".jpg\");*/\n\n    return (\n        <>\n            <h1>{club.name} Club</h1>\n            <br/>\n            <Table striped hover>\n                <tbody>\n                <tr>\n                    <th>About</th>\n                    <td>{club.about}</td>\n                </tr>\n                <tr>\n                    <th>Location</th>\n                    <td>{club.location}</td>\n                </tr>\n                <tr>\n                    <th>Hours</th>\n                    <td>{club.hours}</td>\n                </tr>\n                <tr>\n                    <th>Coach</th>\n                    <td>{club.coach}</td>\n                </tr>\n                <tr>\n                    <th>Email</th>\n                    <td>{club.email}</td>\n                </tr>\n                <tr>\n                    <th>Fee</th>\n                    <td>{club.fee}</td>\n                </tr>\n                </tbody>\n            </Table>\n\n            <hr/>\n\n            <VotesSection clubInitials={initials} upvotes={clubFeedback.upvotes}\n                          setClubFeedback={setClubFeedback}/>\n\n            <hr/>\n            <ReviewsList clubInitials={initials} reviews={clubFeedback.reviews}/>\n            <hr/>\n            <AddReviewForm clubInitials={initials}\n                           setClubFeedback={setClubFeedback}/>\n\n            <hr/>\n\n            <h4>Other Clubs</h4>\n            <ClubsListOther clubs={otherClubs}/>\n        </>\n    );\n}\n\nexport default ClubPage;\n\n//images from\n//soccer: https://pixabay.com/photos/the-ball-ball-for-football-football-3644179/\n//baseball: https://pixabay.com/photos/baseball-glove-ball-leather-sport-4182179/\n//basketball: https://pixabay.com/photos/the-ball-ball-for-basketball-3640769/\n//ice hockey:ice: http://www.moosejawminorhockey.com/","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Card, Col, Row} from 'react-bootstrap';\n\nconst ClubsList = ({clubs}) => (\n    <Row>\n        {clubs.map((club, key) => (\n            <Col xs=\"12\" lg=\"6\" key={key}>\n                <Card>\n                    <Link to={`/clubs/${club.initials}`}>\n                        <Card.Img variant=\"top\" src={require(`../../photos/${club.initials}.jpg`)}/>\n                        <Card.ImgOverlay>\n                            <Card.Body>\n                                <Card.Title bg=\"black\"><h2>{club.name}</h2></Card.Title>\n                                <Card.Text>\n                                    {club.about.substring(0, 100)}...\n                                </Card.Text>\n                            </Card.Body>\n                        </Card.ImgOverlay>\n                    </Link>\n                </Card>\n            </Col>\n        ))}\n    </Row>\n)\nexport default ClubsList;\n\n/*\nclubs.map((club, key) => (\n    <Col xs=\"12\" lg=\"6\" key={key}>\n        <Card>\n            <Link to={`/clubs/${club.initials}`}>\n                <Card.Img variant=\"top\" src={require(`../photos/${club.initials}.jpg`)}/>\n                <Card.Body>\n                    <Card.Title bg=\"black\"><h2>{club.name}</h2></Card.Title>\n                    <Card.Text>\n                        {club.about.substring(0, 100)}...\n                    </Card.Text>\n                </Card.Body>\n            </Link>\n        </Card>\n    </Col>\n))*/\n","import React, {useState} from 'react';\nimport ClubsList from '../components/club/ClubsList';\nimport clubInfo from './club-info';\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst ClubsListPage = () => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n\n            <h1 align=\"center\">Clubs</h1>\n\n            <Button variant=\"success\" onClick={handleShow}>\n                Detail\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Clubs Page</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>There is a list of clubs people can join.</p>\n                    <p> It includes basic information. People can do up/down\n                        votes and write reviews.</p>\n                    <p> All data is stored in a database permanently and you can restore\n                        as default with clicking the Reset DB button at the top right.</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <ClubsList clubs={clubInfo}/>\n        </>\n    )\n}\n\nexport default ClubsListPage;\n","import React, {useState} from 'react';\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst Registration = ({members, setMembers, lastIndex, setLastIndex}) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const initialInfo = {\n        name: '',\n        registerClub: 'N/A',\n        DOB: '',\n        city: '',\n        prov: '',\n        phone: '',\n        email: '',\n        registerDate: ''\n    }\n\n    const [tempMember, setTempMember] = useState(initialInfo);\n\n    const registerMember = async (member) => {\n        let tempMembers = members;\n        member.membersId = lastIndex;\n        tempMembers.unshift(member);\n        setMembers(tempMembers);\n        setLastIndex(lastIndex + 1);\n    }\n\n    const handleAdd = async (e) => {\n        e.preventDefault();\n\n        tempMember.registerDate = moment();\n\n        await registerMember(tempMember);\n\n        setTempMember(initialInfo);\n\n        handleClose();\n    }\n\n    const handleChange = async (e) => {\n        const {name, value} = e.target;\n        setTempMember(prevState => ({\n            ...prevState,   // keep the previous values\n            [name]: value,\n        }));\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Add\n            </Button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Registration</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"name\"\n                                value={tempMember.name}\n                                placeholder=\"John Doe\"\n                                onChange={handleChange}\n                                />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Club</Form.Label>\n                            <Form.Control as=\"select\"\n                                          name=\"registerClub\"\n                                          value={tempMember.registerClub}\n                                          onChange={handleChange}\n                            >\n                                <option>N/A</option>\n                                <option>BASEBALL</option>\n                                <option>SOCCER</option>\n                                <option>BASKETBALL</option>\n                                <option>ICE HOCKEY</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Date of Birth</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                name=\"DOB\"\n                                value={tempMember.DOB}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"city\"\n                                value={tempMember.city}\n                                placeholder=\"Calgary\"\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Province</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"prov\"\n                                value={tempMember.prov}\n                                placeholder=\"AB\"\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control\n                                type=\"phone\"\n                                name=\"phone\"\n                                value={tempMember.phone}\n                                placeholder=\"999-999-9999\"\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                name=\"email\"\n                                value={tempMember.email}\n                                placeholder=\"name@example.com\"\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleAdd}>Submit</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default Registration;","import React from 'react';\nimport {FaTimes} from 'react-icons/fa';\nimport Moment from 'react-moment';\nimport {findIndex, without} from \"lodash\"; // 'without': makes to delete elements of array easily. 'findIndex': can find index to update the info.\nimport {Table} from 'react-bootstrap';\n\nconst MemberList = ({members, setMembers, orderBy, setOrderBy, orderDir, setOrderDir, queryText}) => {\n\n    let order;\n    let filteredMembers = members;\n    if (orderDir === 'asc') {\n        order = 1;\n    } else {\n        order = -1;\n    }\n\n    filteredMembers = filteredMembers.sort((a, b) => {\n        if (a[orderBy].toLowerCase() <\n            b[orderBy].toLowerCase()\n        ) {\n            return -1 * order;\n        } else {\n            return 1 * order;\n        }\n    }).filter(eachItem => {\n        return (\n            eachItem['name']\n                .toLowerCase()\n                .includes(queryText.toLowerCase()) ||\n            eachItem['registerClub']\n                .toLowerCase()\n                .includes(queryText.toLowerCase()) ||\n            eachItem['DOB']\n                .toLowerCase()\n                .includes(queryText.toLowerCase()) ||\n            eachItem['city']\n                .toLowerCase()\n                .includes(queryText.toLowerCase()) ||\n            eachItem['prov']\n                .toLowerCase()\n                .includes(queryText.toLowerCase()) ||\n            eachItem['phone']\n                .toLowerCase()\n                .includes(queryText.toLowerCase()) ||\n            eachItem['email']\n                .toLowerCase()\n                .includes(queryText.toLowerCase())\n        )\n    });\n\n    const updateInfo = async (name, value, id) => {\n        let tempMember = members;\n        let memberIndex = findIndex(members, {\n            membersId: id\n        });\n        tempMember[memberIndex][name] = value;\n        setMembers(tempMember);\n    }\n\n    const deleteMember = async (member) => {\n        let tempMembers = members;\n        tempMembers = without(tempMembers, member);\n        setMembers(tempMembers);\n    }\n\n\n    const changeOrder = async (order, dir) => {\n        setOrderBy(order);\n        setOrderDir(dir);\n    }\n\n\n    return (\n        <div style={{overflow: \"auto\"}}>\n            <Table style={{whiteSpace: \"nowrap\"}}>\n                <thead className=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">Delete</th>\n                    <th scope=\"col\" onClick={_ => changeOrder(\"name\", orderDir)}>Name</th>\n                    <th scope=\"col\" onClick={_ => changeOrder(\"registerClub\", orderDir)}>Club</th>\n                    <th scope=\"col\" onClick={_ => changeOrder('DOB', orderDir)}>D.O.B</th>\n                    <th scope=\"col\" onClick={_ => changeOrder('city', orderDir)}>City</th>\n                    <th scope=\"col\" onClick={_ => changeOrder(\"prov\", orderDir)}>Prov</th>\n                    <th scope=\"col\" onClick={_ => changeOrder(\"phone\", orderDir)}>Phone#</th>\n                    <th scope=\"col\" onClick={_ => changeOrder(\"email\", orderDir)}>E-mail</th>\n                    <th scope=\"col\" onClick={_ => changeOrder(\"registerDate\", orderDir)}>Member Since</th>\n                </tr>\n                </thead>\n                <tbody>\n                {filteredMembers.map(member => (\n                    <tr key={member.membersId}>\n                        <th scope=\"row\">\n                            <button onClick={() => deleteMember(member)}><FaTimes/></button>\n                        </th>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('name', e.target.innerText, member.membersId)\n                            }\n                        >\n                            {member.name}\n                        </td>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('registerClub', e.target.innerText, member.membersId)\n                            }>\n                            {member.registerClub}\n                        </td>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('DOB', e.target.innerText, member.membersId)\n                            }>\n                                {member.DOB}\n                        </td>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('city', e.target.innerText, member.membersId)\n                            }>\n                            {member.city}\n                        </td>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('prov', e.target.innerText, member.membersId)\n                            }>\n                            {member.prov}\n                        </td>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('phone', e.target.innerText, member.membersId)\n                            }>\n                            {member.phone}\n                        </td>\n                        <td\n                            contentEditable\n                            suppressContentEditableWarning\n                            onBlur={\n                                e => updateInfo('email', e.target.innerText, member.membersId)\n                            }>\n                            {member.email}\n                        </td>\n                        <td>\n                            <Moment\n                                date={member.registerDate}\n                                format=\"YYYY-MM-DD\"\n                            />\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default MemberList;","import React from 'react';\n\nconst SearchMember = ({setQueryText}) => {\n\n    const searchMember = async (text) => {\n        setQueryText(text);\n    }\n\n    return (\n        <input type=\"text\" placeholder=\"Search...\" onChange={e => searchMember(e.target.value)}/>\n    );\n}\n\nexport default SearchMember;","import React, {useEffect, useState} from 'react';\nimport Registration from '../components/member/Registration';\nimport MemberList from '../components/member/MemberList';\nimport SearchMember from '../components/member/SearchMember';\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst MembersPage = () => {\n\n    const [members, setMembers] = useState([]);\n    const [orderBy, setOrderBy] = useState('name');\n    const [orderDir, setOrderDir] = useState('asc');\n    const [queryText, setQueryText] = useState('');\n    const [lastIndex, setLastIndex] = useState(0);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        let index = lastIndex\n        fetch('./clubMembers.json')\n            .then(response => response.json())\n            .then(result => {\n                const members = result.map(member => {\n                    member.membersId = index; // to pass the Keys to 'MemberList.js'\n                    index++;\n                    return member;\n                });\n                setLastIndex(index);\n                setMembers(members);\n            });\n    }, []);\n\n    return (\n        <>\n            <h1 align=\"center\">Members</h1>\n            <div className=\"m-1\">\n                <span className=\"p-1\">\n                    <Button variant=\"success\" onClick={handleShow}>\n                        Detail\n                    </Button>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Members Page</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <p>It shows the members of the club.</p>\n                            <p>All members' data is read from JSON.</p>\n                            <p>You can add, search, sort, update, and delete members.</p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </span>\n                <span className=\"p-1\">\n                    <Registration members={members}\n                                  setMembers={setMembers}\n                                  lastIndex={lastIndex}\n                                  setLastIndex={setLastIndex}/>\n                </span>\n                <span className=\"p-1\">\n                    <SearchMember setQueryText={setQueryText}/>\n                </span>\n            </div>\n            <MemberList members={members}\n                        setMembers={setMembers}\n                        orderBy={orderBy}\n                        setOrderBy={setOrderBy}\n                        orderDir={orderDir}\n                        setOrderDir={setOrderDir}\n                        queryText={queryText}/>\n        </>\n    );\n}\n\nexport default MembersPage;\n","import React, {useState} from 'react';\nimport {\n    Button,\n    Modal,\n    ListGroup\n} from 'react-bootstrap';\n\nconst ResetDB = () => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const commitReset = () => {\n        setShow(false);\n        fetch(`/api/resetdb`, {\n            method: 'post',\n        });\n        window.location.reload(false); // refresh pages.\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-danger\" onClick={handleShow}>\n                Restore DB\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Restore DB</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>This option is to restore the club data the below.</p>\n                    <ListGroup>\n                        <ListGroup.Item>Up&Down Votes</ListGroup.Item>\n                        <ListGroup.Item>Reviews</ListGroup.Item>\n                        <ListGroup.Item>Members</ListGroup.Item>\n                    </ListGroup>\n                    <br/>\n                    <p>If you want to restore the default data then press the 'RESTORE' button.</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"danger\" onClick={commitReset}>\n                        RESTORE\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default ResetDB;","import React from 'react';\nimport {Form, Nav, Navbar} from 'react-bootstrap'\nimport ResetDB from './components/ResetDB';\n\nconst NavBar = () => (\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" >\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/club-list\">Clubs</Nav.Link>\n                <Nav.Link href=\"/members\">Members</Nav.Link>\n            </Nav>\n            <Form>\n                <ResetDB/>\n            </Form>\n    </Navbar>\n);\n\nexport default NavBar;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch,} from 'react-router-dom';\nimport {Container} from \"react-bootstrap\";\nimport './css/App.css';\nimport HomePage from './pages/HomePage';\nimport ClubPage from './pages/ClubPage';\nimport ClubsListPage from './pages/ClubsListPage';\nimport MembersPage from './pages/MembersPage';\nimport NavBar from \"./NavBar\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nconst App = () => (\n    <Router>\n        <NavBar/>\n        <Container>\n            <Switch>\n                <Route path=\"/\" component={HomePage} exact/>\n                <Route path=\"/club-list\" component={ClubsListPage}/>\n                <Route path=\"/members\" component={MembersPage}/>\n                <Route path=\"/clubs/:initials\" component={ClubPage}/>\n                <Route component={NotFoundPage}/>\n            </Switch>\n        </Container>\n    </Router>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery';\nimport 'popper.js/dist/umd/popper';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}